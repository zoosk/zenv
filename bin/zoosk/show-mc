#! /usr/bin/env python

import json
import webbrowser
import datetime
import time
import os
import sys

from subprocess import call
from zenvlib import environ, cli

cli.check_usage(
    '%P: Show the current Mission Control Mission Statuses from your dev instance.\n' +
    'Usage: %P [prod]\n' +
    'If you specify prod, show the current statuses from Prod instead of your dev'
)
cli.fail_without_workspace()

work_dir = environ.current_work
os.chdir(work_dir)
devserver = environ.devserver

# get the latest mission control data
if len(sys.argv) > 1 and sys.argv[1] == 'prod':
    prod = True
    call(['git', 'checkout', 'origin/master', '--', 'web/config/mission_control.js'])
    json_file_path = work_dir + '/web/config/mission_control.js'
    print 'Getting mission data from: '+json_file_path
else:
    prod = False
    call(['scp', devserver+':/srv/mission_control/current/mission_control.js', '.'])
    json_file_path = work_dir + '/mission_control.js'
    print 'Getting mission data from dev instance'

json_file = open(json_file_path)
mc_data = json.load(json_file)
json_file.close()

#product lookup
products = {0:'all',1:'www',2:'messenger',3:'iphone',4:'android',5:'mobile',6:'facebook',13:'ipad',14:'admin',15:'touch',16:'touch tablet',17:'android tablet',18:'kindle'}

#build the dict of experiments by mission
experiments = {}
for experiment in mc_data['experiment']:
    key = experiment['container']
    if not 'group_name' in experiment:
        if experiment['product_code'] is None:
            experiment['product_code'] = 0;
        experiment['group_name'] = products[experiment['product_code']]
    if key in experiments:
        if 'group_name' in experiment:
            found = False
            for an_experiment in experiments[key]:
                if 'group_name' in an_experiment and an_experiment['group_name'] == experiment['group_name']:
                    found = True
            if found == False:
                experiments[key].append(experiment)
        else:
            experiments[key].append(experiment)
    else:
        experiments[key] = [experiment]

display_filename = `int(time.mktime(datetime.datetime.now().timetuple()))`+'.html'
display_file = open(display_filename, 'w')
display_file.write('<html><head>')
display_file.write('<style>th td{font-size: large;}')
display_file.write('a.tooltip {outline:none;}')
display_file.write('a.tooltip strong {line-height:30px;}')
display_file.write('a.tooltip:hover {text-decoration:none;}')
display_file.write('a.tooltip span {')
display_file.write('    z-index:10;display:none; padding:14px 20px;')
display_file.write('    margin-top:60px; margin-left:-160px;')
display_file.write('    width:300px; line-height:16px;')
display_file.write('}')
display_file.write('a.tooltip:hover span{')
display_file.write('    display:inline; position:absolute;')
display_file.write('    border:2px solid #FFF; color:#EEE;')
display_file.write('    background:#333 repeat-x 0 0;')
display_file.write('}')
display_file.write('.callout {z-index:20;position:absolute;border:0;top:-14px;left:120px;}')
display_file.write('a.tooltip span')
display_file.write('{')
display_file.write('    border-radius:2px;')
display_file.write('    box-shadow: 0px 0px 8px 4px #666;')
display_file.write('}')
display_file.write('</style>')
display_file.write('<title>Current Missions</title></head><body>')
display_file.write('<table border="1"><tr><th>Mission</th><th>Description</th><th>Rollout</th><th>Status</th></tr>')

for mission in mc_data['mission']:
    display_file.write('<tr><td style="text-align: center;">'+mission['name']+'</td><td>'+mission['description']+'</td><td>&nbsp;</td><td>&nbsp;</td></tr>')
    for experiment in experiments[mission['name']]:
        group = ''
        if 'group_name' in experiment:
            group = experiment['group_name']
        display_file.write('<tr><td>&nbsp;</td><td style="text-align: right;">'+group+'&nbsp;</td>')
        display_file.write('<td style="text-align: center;">'+str(experiment['rollout'])+'%</td>')
        extra_info = '&nbsp;&nbsp;&nbsp;<a href="#" class="tooltip">Extra Info<span><div style="color: red;">Released:</div> '+experiment['released']+'<br/><div style="color: red;">Modified:</div> '+experiment['last_modified']+'<br/><div style="color: red;">Whitelist:</div>      '
        for whitelist_item in experiment['whitelist']:
            extra_info += str(whitelist_item) + ',<br/>'
        extra_info = extra_info[:-6]
        extra_info += '<br/><div style="color: red;">Countries:</div>      '
        for country_item in experiment['countries']:
            extra_info += str(country_item) + ',<br/>'
        extra_info = extra_info[:-6]
        extra_info += '</span></a>'

        display_file.write('<td><div style="float:left;">'+experiment['status'].title()+'</div><div style="float:right;">'+extra_info+'</div></td>')
        display_file.write('</tr>')

display_file.write('</table>')
display_file.write('</body></html>')
display_file.close()

webbrowser.open_new('file://'+work_dir+'/'+display_filename)

time.sleep(2)
os.remove(display_filename)
if prod:
    # put back whatever is in their repo
    call(['git', 'reset', 'HEAD', 'web/config/mission_control.js'])
    call(['git', 'checkout', '--', 'web/config/mission_control.js'])
else:
    os.remove('mission_control.js')