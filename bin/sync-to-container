#! /usr/bin/env bash

# Usage information
if [ "$1" == '-h' -o "$1" == '--help' ]; then
    PROGNAME=$(basename $0)
    echo "${PROGNAME}: Push code (rsync) to docker container"
    echo "Usage: ${PROGNAME} [-v] [local-folder:container-folder]..."
    echo 'local-folder is path to the folder in your local machine that needs to be synced'
    echo "container-folder is the folder path relative to the container volume"
    echo "the continer name will be inferred from your current work dir"
    echo "Pass -v for a progress dialog during sync."
    exit 1
fi

if [ -z "$ZENV_INITIALIZED" ]; then
    echo 'This script must be run from within ZEnv.'
    exit 1
elif [ -z "$ZENV_CURRENT_WORK" ]; then
    echoerr 'You must use a checkout before syncing its code.'
    exit 1
fi

# If we want a verbose flag
ph=""
if [ "$1" == "-v" ]; then
    ph="--progress"
    shift
fi

if [ "$1" != '' ]; then
    DIRS="$@"
else
    DIRS="${ZENV_RSYNC_DOCKER_DIRECTORIES}"
fi
# name of the container should match the name of the project repo
# When we later support containers for multiple branches, we will need to append the branch name to the container something like container-name/branch-name
container=$(basename ${ZENV_CURRENT_WORK})

if [ "$(vm-docker inspect $container 2>/dev/null)" != "[]" ]; then
  for d in ${DIRS}; do
    IFS=':' read -ra DIR <<< "$d"
    if [ -e ${DIR[0]} ]; then
      echo "Rsync ${DIR[0]} to '$container' docker container"
      rsync-to-container -av $ph "${DIR[0]}"  "$container" "/srv" "/${DIR[1]}"
    fi
  done
fi
