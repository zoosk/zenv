#! /usr/bin/env bash

# Startup checks
if [ -z "$ZENV_INITIALIZED" ]; then
	echo 'You must run this program from within ZEnv.'
	exit 1
fi

# Usage Information
if [ "$1" == '--help' -o "$1" == '-h' ]; then
    PROGNAME="$(basename $0)"
    echo "${PROGNAME}: SSH to any Zoosk VM."
    echo "${BOLD}Usage: ${TXTRESET}${PROGNAME} <devID>${TXTRESET}"
    echo "Where devID is the non-padded number of the VM you want to ssh to (ex: '74')."
    echo "Not providing an argument will default to your personal VM"
    echo "Use --list to open a list of Zoosk VMs"
    exit 1
fi

# Ssh to personal VM is no aregument is specified
if [ "$1" == '' ]; then
    ssh "${ZENV_LDAP_USERNAME}@${ZENV_DEVSERVER}"
    exit 0
fi

# Opens the FogBugz wiki with a list of VMs numbers and their owners
if [ "$1" == "--list" ]; then
    open 'https://f.corp.zoosk.com/default.asp?W550'
    exit 1
fi

# Store user's input and prepare argument for paddingf
dev_num="$1"
# determine amount of digits in the argument
length=${#dev_num}

# Check if user input is an integer
if [[ $dev_num =~ ^[a-z]+$ ]]; then
    echo "Opps, '$dev_num' is not a valid dev number, please enter a number (eg. '74')."
    echo ""
    exit 1
fi

# Logic in place with the assumption that VMs will not contain more than 3 digits
if [ $length -eq 1 ]; then
    dev_num=00${dev_num}
    ssh "${ZENV_LDAP_USERNAME}@www${dev_num}.sfo2.zoosk.com"
    exit 1

elif [ $length -eq 2 ]; then
    dev_num=0${dev_num}
    ssh "${ZENV_LDAP_USERNAME}@www${dev_num}.sfo2.zoosk.com"
    exit 1

elif [$length -eq 3 ]; then
    ssh "${ZENV_LDAP_USERNAME}@www${dev_num}.sfo2.zoosk.com"
    exit 1
# Throw an error if the devId is longe than 3 digits
elif [ $length -ge 4 ]; then
    echo "Oops: A devID can't be more than 3 digits"
    exit 1
fi