#! /usr/bin/env bash

# Usage information
if [ "$1" == '-h' -o "$1" == '--help' ]; then
    PROGNAME=$(basename $0)
    echo "${PROGNAME}: Push code (rsync) to your Dev VM instance."
    echo "Usage: ${PROGNAME} [-v] [folder]..."
    echo 'Folder names are relative to your /srv directory (for example, dev67/current)'
    echo 'If no folders are passed, all folders relating to your current checkout will be synced.'
    echo "Pass -v for a progress dialog during sync."
    exit 1
fi

if [ -z "$ZENV_INITIALIZED" ]; then
    echo 'This script must be run from within ZEnv.'
    exit 1
elif [ -z "$ZENV_CURRENT_WORK" ]; then
    echoerr 'You must use a checkout before syncing its code.'
    exit 1
fi

# If we want a verbose flag
ph=""
if [ "$1" == "-v" ]; then
    ph="--progress"
    shift
fi

if [ "$1" != '' ]; then
    DIRS="$*"
else
    DIRS="${ZENV_RSYNC_DIRECTORIES}"
fi
for d in ${DIRS}; do
    if [ "$(echo "$d" | egrep '^/srv/')" != '' ]; then
        # For usability, automatically remove /srv/ from the beginning of args
        d="$(echo "$d" | sed 's|^/srv/||')"
    fi

    def_exclude=(
        certs
        environment.json
        log
        media
        paypal-certs
        photoworking
        server.json
        working
    )

    case "$d" in
    dev${ZENV_DEVID}_photo-service)
        dir_exclude=(
            /shared
        )
        ;;
    *)
        dir_exclude=()
        ;;
    esac

    if [ -e ${ZENV_LOCAL_DEPLOY_DIR}/${d} ]; then
        echo "Rsync ${ZENV_LOCAL_DEPLOY_DIR}/${d} to ${ZENV_DEVSERVER}:/srv/${d}/ at $(date)"
        rsync -az --delete $ph \
            $(for exclude in ${def_exclude[@]} ${dir_exclude[@]}; do echo "--exclude=$exclude "; done) \
            ${ZENV_LOCAL_DEPLOY_DIR}/${d}/ ${ZENV_LDAP_USERNAME}@${ZENV_DEVSERVER}:/srv/${d}/
    fi
done

# name of the container should match the name of the project repo
# When we later support containers for multiple branches, we will need to append the branch name to the container something like container-name/branch-name
container=$(basename ${ZENV_CURRENT_WORK})

# if docker rsync directory is specified and a docker container exists, then preform rsync to the docker container
if [ ! -z "$ZENV_RSYNC_DOCKER_DIRECTORIES"  -a "$(vm-docker inspect $container 2>/dev/null)" != "[]" ]; then
  for d in $ZENV_RSYNC_DOCKER_DIRECTORIES; do
    if [ "$(echo "$d" | egrep '^/srv/')" != '' ]; then
        # For usability, automatically remove /srv/ from the beginning of args
        d="$(echo "$d" | sed 's|^/srv/||')"
    fi

   IFS=':' read -ra DIRS <<< "$d"

   # rsync from remote directory to docker conatiner. At some point, we should directly rsync to docker container from local machine,
   # instead of rsyncing from local machine -> remote machine -> docker containter
   if ( ssh $ZENV_DEVSERVER "[ -d /srv/${DIRS[0]} ]" ); then
     echo "Rsync $ZENV_DEVSERVER:/srv/${DIRS[0]} to '$container' docker container"
     rsync-to-container -av "/srv/${DIRS[0]}/"  "$container" "/srv" "/${DIRS[1]}"
   fi
  done
fi
