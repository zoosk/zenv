#! /usr/bin/env python

import os
import re


def readprops(*property_names):
    """ Read one or more property names from the configuration files of the current workspace. """
    required_settings = set(property_names)
    values = {}
    separator = '='

    def expand_vars(string):
        return re.sub('\$\{([^}]+)\}', '%(\\1)s', string) % values

    settings_string =''
    if os.environ['ZENV_BUILDPROPS_COMMON'] != '':
        with open(os.environ['ZENV_BUILDPROPS_COMMON'], 'r') as fp:
            settings_string += fp.read()

    settings_string += "\n"
    
    with open(os.environ['ZENV_BUILDPROPS'], 'r') as fp:
        settings_string += fp.read()

    settings = settings_string.split("\n")
    for line in settings:
        # Read the setting
        split = line.split(separator)
        name = split[0].strip()
        if len(split) == 1:
            # The value is empty
            values[name] = ''
        else:
            values[name] = split[1].strip()

    for prop in property_names:
        if prop not in values:
            continue
        # Expand variables
        old = values[prop]
        while True:
            value = expand_vars(old)
            if value == old:
                break
            old = value

        values[prop] = value

    return values



if __name__ == '__main__':
    from os.path import basename
    from sys import argv

    if 'ZENV_INITIALIZED' not in os.environ:
        print 'This program only works from within ZEnv.'
        exit(1)

    if len(argv) == 1 or '--help' in argv:
        progname = basename(argv[0])
        print '%s: Read one or more build properties from the settings for the current workspace.' % progname
        print 'Usage: %s <property_name>...' % progname
        exit(0)
    elif 'ZENV_CURRENT_WORK' not in os.environ:
        print 'You must select a workspace before using this program.'
        exit(1)

    os.chdir(os.environ['ZENV_CURRENT_WORK'])
    props = readprops(*argv[1:])
    exit_code = 1
    for arg in argv[1:]:
        if arg in props:
            exit_code = 0
            print props[arg]

    exit(exit_code)
